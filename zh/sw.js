(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"dcef335341cad15d175d323f91713e6a","url":"404.html"},{"revision":"d172f8b2bb9c964e792f014ff922aded","url":"assets/css/styles.cee48ecd.css"},{"revision":"2ba9e5c2b8b9334a5d3ed5b94e453b76","url":"assets/js/04a1ff1d.aa5bf726.js"},{"revision":"2351081de10053741cb541a0dc59c915","url":"assets/js/08962994.5233b9ce.js"},{"revision":"523fee7e0749344d3065056e7ec6abee","url":"assets/js/09bd8251.f7bba954.js"},{"revision":"465465605d803b776953d3e740382729","url":"assets/js/0ad4fb1f.aa4b641b.js"},{"revision":"f7e49193d768bb37d736d701f06271d4","url":"assets/js/0ea0c0e8.87649fb0.js"},{"revision":"2936d0eea64cdb2d553c359c33a773db","url":"assets/js/0f716783.3fb6ecf3.js"},{"revision":"45565f296bd9d9340a2fae94ce7ccba6","url":"assets/js/13e82bbd.6e0e2c76.js"},{"revision":"5ab8c840e65669d305b250ec1aee97c3","url":"assets/js/14eb3368.19ca2084.js"},{"revision":"cffb56a6361eaf7312c6ff2a046c8a64","url":"assets/js/17896441.d65bbfe4.js"},{"revision":"809453e3edcfd9b10e0fb36755ac3e72","url":"assets/js/1be78505.9607912b.js"},{"revision":"9a29ff1808f444ac5b56408363faea7b","url":"assets/js/1df93b7f.57cc8227.js"},{"revision":"351d58fa4855ed4827e89128c5a501b1","url":"assets/js/230.e5d532a2.js"},{"revision":"cfdd42ba91d8bd3037fafbf6a7512997","url":"assets/js/2b1e257e.fca7ba31.js"},{"revision":"dfe144a952eff4714df6ee397910f309","url":"assets/js/2b49bc9e.cb36471a.js"},{"revision":"bdd1e0c469c3fc9c7b4216db6fb6b0c1","url":"assets/js/4491524f.6713f0c9.js"},{"revision":"cd356083f909ee3d9c73228df4eb9213","url":"assets/js/47a2ab89.72cdaa6b.js"},{"revision":"12a46c824c22cf78a6555fce8d02f57e","url":"assets/js/4972.ec6cfa17.js"},{"revision":"bf25f9e3caa46d6052fb2764ac607587","url":"assets/js/5131.2c346bfc.js"},{"revision":"8609fbee032dc7d2e116cb64e5a93e47","url":"assets/js/5283.3f2d0697.js"},{"revision":"5a25987f24c4efd2baa6c6296396d2a6","url":"assets/js/56f0168a.33c6da0b.js"},{"revision":"d1ef8589975e5adb0772c0fffbd3e285","url":"assets/js/598ea675.58dd69a5.js"},{"revision":"3fd09cfc682d9d4695a6715e3e47fd3a","url":"assets/js/5ed9614c.8a229dbc.js"},{"revision":"b9228c5758f73524ac8e18b189c87b00","url":"assets/js/61ffba71.53fa972c.js"},{"revision":"6acc6590bea17aff88c72f62d7650d6c","url":"assets/js/6b692f41.1213859f.js"},{"revision":"d2172ba4aed3eeec6a5eaf454fb46d63","url":"assets/js/78126fdb.372a6a4b.js"},{"revision":"62e9e7f6ac8d73d3ddd997eb7b3fb42c","url":"assets/js/7ceb65cf.aaf8b51a.js"},{"revision":"cc85e0bab4ce1f0742c7110ed06e22c6","url":"assets/js/85e76eb8.a399fe2f.js"},{"revision":"0bdbea21a29252297c0f0368a03cec1f","url":"assets/js/9095.0fc2c9a4.js"},{"revision":"20ef216962bb002509ef183103cd7bc3","url":"assets/js/935f2afb.5d9adeff.js"},{"revision":"a0f06fda2e6f93d681c2968e86dfa1fa","url":"assets/js/979.373fa54f.js"},{"revision":"7a7f9241ff727de198946e5534d179df","url":"assets/js/9b155510.212b3751.js"},{"revision":"7e885cb87b801bcccc8a483773a4df9b","url":"assets/js/9e4087bc.54902b5d.js"},{"revision":"2bd152337e7484fc805ccc9e23c8a17d","url":"assets/js/a1aff75e.51956d22.js"},{"revision":"f55d7272e5a9cd9f7610f1323b2cbe7f","url":"assets/js/a30d9234.1e9ae408.js"},{"revision":"51221b8c82d836a0b3b34bfbb85e804a","url":"assets/js/a6aa9e1f.be9cfeeb.js"},{"revision":"617576bb6c29cafb618b3cd8215756b5","url":"assets/js/b0461066.78465b7c.js"},{"revision":"ed24c11e7a2210d483f523d928319e03","url":"assets/js/b5e1e86c.6b598a46.js"},{"revision":"be4fc3d3592d1f59310a6a157c4b8915","url":"assets/js/b6a2d028.96fc060a.js"},{"revision":"609cd6ed0513429e7fe37bb87273c6a7","url":"assets/js/b89ea502.54fbaab7.js"},{"revision":"bc4e4eb8e1081d136007e954c37d9dab","url":"assets/js/b9e5bc89.6329ddb8.js"},{"revision":"eacd5cefca065508dc1d4889e1ae55fb","url":"assets/js/bbf707fc.76764390.js"},{"revision":"c7e1c7dabaced6b8c928b55878b47ed2","url":"assets/js/c0fdcace.e88f7b1c.js"},{"revision":"0eb9eae3dcada6460c766e6d7b54f22f","url":"assets/js/c22ac12f.4fbe1c97.js"},{"revision":"e9f67ca1d7adda4dd5cfa2615897dd75","url":"assets/js/c9277353.999c752b.js"},{"revision":"a53dc62b37a7ccd074b9a5fb0e7fd44a","url":"assets/js/ccc49370.0f944677.js"},{"revision":"472af681a97d01b1acbc1ec857600dd6","url":"assets/js/dc4bb4c7.f515bfa4.js"},{"revision":"580e8fe7af44b433804d431aec717c22","url":"assets/js/e5c6d364.27d87d9e.js"},{"revision":"f6dbd46bb61948b048519402eda77e73","url":"assets/js/ef5d54d6.57bda239.js"},{"revision":"c426c92aadc666f9306d08197d59446f","url":"assets/js/f3015d51.8204316e.js"},{"revision":"8f36ceb6b893fb43e0316611db8d9b66","url":"assets/js/f3eabdeb.4ce6991c.js"},{"revision":"130849ac0ec8255a442969a4e85c3382","url":"assets/js/f6aa66e6.6737096b.js"},{"revision":"e4b1fef1032943e03c83ae1ae5a0a30e","url":"assets/js/f7366610.1eacba8d.js"},{"revision":"a34f07163fe96e889174269e2c91b47b","url":"assets/js/f841cfcf.f222988a.js"},{"revision":"c68739930c0209a74c8ca3ae06c8d996","url":"assets/js/main.c95c79c0.js"},{"revision":"a510cc1b1053508db112d5d72d405315","url":"assets/js/runtime~main.e23edf5c.js"},{"revision":"eb2314d5bedd03bb82457a8354f03fde","url":"community/archive/index.html"},{"revision":"eff95cce9a8afde04bd53f273737ac9a","url":"community/index.html"},{"revision":"c6cb527c2dd9df81125345ac5c269876","url":"community/main/index.html"},{"revision":"704f41d4dfae31c53bf7c78a8c9ae0e7","url":"docs/about-stonedb/architecture/index.html"},{"revision":"49bdc06a56ef8931c443f05f99357978","url":"docs/about-stonedb/intro/index.html"},{"revision":"1de66e9e3d48be10be17c1c11f2e25e3","url":"docs/about-stonedb/limits/index.html"},{"revision":"a888e8d0f7d9bd294df390a710bc2794","url":"docs/about-stonedb/terms/index.html"},{"revision":"e0fb4d71ff3236f5a3bcf8456f480a20","url":"docs/compiling-methods/index.html"},{"revision":"a83eab69b0eef4d1f5f2dbfc876a2b74","url":"docs/developer-guide/appendix/configuration-parameters/index.html"},{"revision":"b9b12faccc18db0e3ab4a1c65835f798","url":"docs/developer-guide/appendix/error-codes/index.html"},{"revision":"49aa92765d64d085f9433d53c78057b2","url":"docs/developer-guide/compiling-methods/compile-overview/index.html"},{"revision":"36c68be173fa97fada14fc5cbf244427","url":"docs/developer-guide/compiling-methods/compile-using-centos7/index.html"},{"revision":"9d05c8c005433ae3e780fd8ab41370a0","url":"docs/developer-guide/compiling-methods/compile-using-docker/index.html"},{"revision":"f053563d403257b717a99d24eb18fdf2","url":"docs/developer-guide/compiling-methods/compile-using-redhat7/index.html"},{"revision":"dba9d1fa711fadd6f457da8b8fdc33d8","url":"docs/developer-guide/compiling-methods/compile-using-ubuntu20.04/index.html"},{"revision":"c61ebae01b0398c33f8769b8a49fef18","url":"docs/developer-guide/connect-to-stonedb/use-mysql-client/index.html"},{"revision":"20025911dc838362e85a740cd373e923","url":"docs/developer-guide/connect-to-stonedb/use-navicat/index.html"},{"revision":"5b80ec98e1cb74fac66b03e89db9deba","url":"docs/developer-guide/create-and-manage-database-objects/create-and-manage-database/index.html"},{"revision":"37278d5ea97c7da6728bac67c30f4163","url":"docs/developer-guide/create-and-manage-database-objects/create-and-manage-stored-procedure/index.html"},{"revision":"596a14d1f8b0c047d579ae8182938332","url":"docs/developer-guide/create-and-manage-database-objects/create-and-manage-table/index.html"},{"revision":"66adf00ac9a3a268a785bc71f47cc32f","url":"docs/developer-guide/create-and-manage-database-objects/create-and-manage-view/index.html"},{"revision":"7dca8c4a7bc0ea456008273f7e9b5bef","url":"docs/developer-guide/regular-change-operations/index.html"},{"revision":"f3a26f11f18c62e2ae9b71e59a1ab9ef","url":"docs/developer-guide/statements-for-queries/index.html"},{"revision":"d10ace56afd8d9ebca8cfe642c76d700","url":"docs/download/index.html"},{"revision":"908ce9a5018ecd9bd7f62ab2d68954c3","url":"docs/environment-requirements/server-configuration-requirements/index.html"},{"revision":"5cf7c42c6f4df789450a4aee941def20","url":"docs/environment-requirements/supported-servers-and-oss/index.html"},{"revision":"5381b11599ba3c6fa9ad90eedb7c5772","url":"docs/getting-started/basic-operations/index.html"},{"revision":"17f4bfe01700fb1f800b7abc5104f244","url":"docs/getting-started/quick-deployment/index.html"},{"revision":"7b16464b5f3f343dcef315ea1bd17c3a","url":"docs/getting-started/quick-start/index.html"},{"revision":"1599485ec4e8c903ccffeabee65c46de","url":"docs/O&M-Guide/backup-and-recovery/use-mydumper-full-backup/index.html"},{"revision":"4d6b872731008f08664f0e11d5083d58","url":"docs/O&M-Guide/backup-and-recovery/use-mysqldump-backup-and-restore/index.html"},{"revision":"62f353ca856230efda58636e8e51c4c5","url":"docs/O&M-Guide/monitoring-and-alerting/prometheus+grafana-monitor/index.html"},{"revision":"f3fe22eccfb79aeb25f8abebcda60aab","url":"docs/O&M-Guide/regular-change-operations/index.html"},{"revision":"7ee0068af0ea05ee14bbac87fcef2cdd","url":"index.html"},{"revision":"dcab6c00a8c6209bde94bff518af6cda","url":"manifest.json"},{"revision":"54569843f6f6ad9d51b9e9323e0d85cb","url":"styles/panel/index.html"},{"revision":"ea268e49582a11ab959bd8b7f30ff025","url":"img/favicon.ico"},{"revision":"d1d317e005b3aacd7897bb7c1004e296","url":"img/icons/128x128.png"},{"revision":"6ccd311f69702a4cdc1a599e7f303fec","url":"img/icons/144x144.png"},{"revision":"4068161cc8a2a4560a4b36b776d1f65c","url":"img/icons/152x152.png"},{"revision":"8d5af5791199ee12e1a5c40d62e0d764","url":"img/icons/192x192.png"},{"revision":"7743d9b2795bb4fd1e5ddbdde473321a","url":"img/icons/200x200.png"},{"revision":"0e505d2a9544b814a0d52ae4b700eef2","url":"img/icons/384x384.png"},{"revision":"6b5692ea59db253b55538632470b789c","url":"img/icons/512x512.png"},{"revision":"ab6607844950cb665f06c079a7ff939a","url":"img/icons/72x72.png"},{"revision":"87ff0ff98feac058d7c72aa4df4c131e","url":"img/icons/96x96.png"},{"revision":"b633060f5875949127f6a8a772af51ec","url":"img/logo_stonedb.svg"},{"revision":"7743d9b2795bb4fd1e5ddbdde473321a","url":"img/stoneDB.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();